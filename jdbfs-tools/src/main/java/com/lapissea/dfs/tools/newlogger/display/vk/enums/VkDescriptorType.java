package com.lapissea.dfs.tools.newlogger.display.vk.enums;

import com.lapissea.dfs.tools.newlogger.display.VUtils;

import static org.lwjgl.vulkan.EXTInlineUniformBlock.VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT;
import static org.lwjgl.vulkan.EXTMutableDescriptorType.VK_DESCRIPTOR_TYPE_MUTABLE_EXT;
import static org.lwjgl.vulkan.KHRAccelerationStructure.VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR;
import static org.lwjgl.vulkan.NVRayTracing.VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_NV;
import static org.lwjgl.vulkan.QCOMImageProcessing.VK_DESCRIPTOR_TYPE_BLOCK_MATCH_IMAGE_QCOM;
import static org.lwjgl.vulkan.QCOMImageProcessing.VK_DESCRIPTOR_TYPE_SAMPLE_WEIGHT_IMAGE_QCOM;
import static org.lwjgl.vulkan.VALVEMutableDescriptorType.VK_DESCRIPTOR_TYPE_MUTABLE_VALVE;
import static org.lwjgl.vulkan.VK10.*;
import static org.lwjgl.vulkan.VK13.VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK;

public enum VkDescriptorType implements VUtils.IDValue{
	SAMPLER(VK_DESCRIPTOR_TYPE_SAMPLER),
	COMBINED_IMAGE_SAMPLER(VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER),
	SAMPLED_IMAGE(VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE),
	STORAGE_IMAGE(VK_DESCRIPTOR_TYPE_STORAGE_IMAGE),
	UNIFORM_TEXEL_BUFFER(VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER),
	STORAGE_TEXEL_BUFFER(VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER),
	UNIFORM_BUFFER(VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER),
	STORAGE_BUFFER(VK_DESCRIPTOR_TYPE_STORAGE_BUFFER),
	UNIFORM_BUFFER_DYNAMIC(VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC),
	STORAGE_BUFFER_DYNAMIC(VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC),
	INPUT_ATTACHMENT(VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT),
	INLINE_UNIFORM_BLOCK(VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK),
	ACCELERATION_STRUCTURE_KHR(VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR),
	ACCELERATION_STRUCTURE_NV(VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_NV),
	SAMPLE_WEIGHT_IMAGE_QCOM(VK_DESCRIPTOR_TYPE_SAMPLE_WEIGHT_IMAGE_QCOM),
	BLOCK_MATCH_IMAGE_QCOM(VK_DESCRIPTOR_TYPE_BLOCK_MATCH_IMAGE_QCOM),
	MUTABLE_EXT(VK_DESCRIPTOR_TYPE_MUTABLE_EXT),
	INLINE_UNIFORM_BLOCK_EXT(VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT),
	MUTABLE_VALVE(VK_DESCRIPTOR_TYPE_MUTABLE_VALVE),
	;
	
	public final int id;
	VkDescriptorType(int id){ this.id = id; }
	@Override
	public int id(){ return id; }
	
	public static VkDescriptorType from(int id){ return VUtils.fromID(VkDescriptorType.class, id); }
}
