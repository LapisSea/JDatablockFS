package com.lapissea.dfs.tools.newlogger.display.vk.enums;

import com.lapissea.dfs.utils.iterableplus.Iters;
import com.lapissea.util.UtilL;

import java.util.List;

import static org.lwjgl.vulkan.EXTConditionalRendering.VK_PIPELINE_STAGE_CONDITIONAL_RENDERING_BIT_EXT;
import static org.lwjgl.vulkan.EXTFragmentDensityMap.VK_PIPELINE_STAGE_FRAGMENT_DENSITY_PROCESS_BIT_EXT;
import static org.lwjgl.vulkan.EXTMeshShader.VK_PIPELINE_STAGE_MESH_SHADER_BIT_EXT;
import static org.lwjgl.vulkan.EXTMeshShader.VK_PIPELINE_STAGE_TASK_SHADER_BIT_EXT;
import static org.lwjgl.vulkan.EXTTransformFeedback.VK_PIPELINE_STAGE_TRANSFORM_FEEDBACK_BIT_EXT;
import static org.lwjgl.vulkan.KHRAccelerationStructure.VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR;
import static org.lwjgl.vulkan.KHRFragmentShadingRate.VK_PIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR;
import static org.lwjgl.vulkan.KHRRayTracingPipeline.VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR;
import static org.lwjgl.vulkan.NVDeviceGeneratedCommands.VK_PIPELINE_STAGE_COMMAND_PREPROCESS_BIT_NV;
import static org.lwjgl.vulkan.VK10.*;
import static org.lwjgl.vulkan.VK13.VK_PIPELINE_STAGE_NONE;

public enum VkPipelineStageFlag{
	TOP_OF_PIPE(VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT),
	DRAW_INDIRECT(VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT),
	VERTEX_INPUT(VK_PIPELINE_STAGE_VERTEX_INPUT_BIT),
	VERTEX_SHADER(VK_PIPELINE_STAGE_VERTEX_SHADER_BIT),
	TESSELLATION_CONTROL_SHADER(VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT),
	TESSELLATION_EVALUATION_SHADER(VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT),
	GEOMETRY_SHADER(VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT),
	FRAGMENT_SHADER(VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT),
	EARLY_FRAGMENT_TESTS(VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT),
	LATE_FRAGMENT_TESTS(VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT),
	COLOR_ATTACHMENT_OUTPUT(VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT),
	COMPUTE_SHADER(VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT),
	TRANSFER(VK_PIPELINE_STAGE_TRANSFER_BIT),
	BOTTOM_OF_PIPE(VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT),
	HOST(VK_PIPELINE_STAGE_HOST_BIT),
	ALL_GRAPHICS(VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT),
	ALL_COMMANDS(VK_PIPELINE_STAGE_ALL_COMMANDS_BIT),
	NONE(VK_PIPELINE_STAGE_NONE),
	TRANSFORM_FEEDBACK_EXT(VK_PIPELINE_STAGE_TRANSFORM_FEEDBACK_BIT_EXT),
	CONDITIONAL_RENDERING_EXT(VK_PIPELINE_STAGE_CONDITIONAL_RENDERING_BIT_EXT),
	ACCELERATION_STRUCTURE_BUILD_KHR(VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR),
	RAY_TRACING_SHADER_KHR(VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR),
	FRAGMENT_DENSITY_PROCESS_EXT(VK_PIPELINE_STAGE_FRAGMENT_DENSITY_PROCESS_BIT_EXT),
	FRAGMENT_SHADING_RATE_ATTACHMENT_KHR(VK_PIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR),
	COMMAND_PREPROCESS_NV(VK_PIPELINE_STAGE_COMMAND_PREPROCESS_BIT_NV),
	TASK_SHADER_EXT(VK_PIPELINE_STAGE_TASK_SHADER_BIT_EXT),
	MESH_SHADER_EXT(VK_PIPELINE_STAGE_MESH_SHADER_BIT_EXT),
	;
	
	public final int bit;
	VkPipelineStageFlag(int bit){ this.bit = bit; }
	
	public static List<VkPipelineStageFlag> from(int props){
		return Iters.from(VkPipelineStageFlag.class).filter(cap -> UtilL.checkFlag(props, cap.bit)).toList();
	}
}
